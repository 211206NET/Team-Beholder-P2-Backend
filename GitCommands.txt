
#Topic: GitBash

Useful Commands:
ls: Show Contents
mkdir: Make Directory
touch: Make File
cd: Change Directory
'program' 'filename.ext': Open with
e.g. nano day1.txt
vim is bad don't open things with it
code day1.txt: Opens in Visual Basic Code
cd~: return to home directory
rm day1.txt: Deletes file forever
cat day1.txt: Adds text of file to screen in Bash

/ : Root
. : Current
.. : Parent
~ : Home
pwd : Absolute path of current directory

Flags:
ls --help : Shows all things you can do
ls ~ : Shows contents of Root Directory
ls -a : Shows contents of current directory including hidden
ls -A : Shows contents including hidden but without ..
ls -al : Shows all contents long form read out
ls -l : Show details of contents
rm -r "Folder Name" : Remove folder and all contents forever


in GIT Make repository public, returns repo code
first be in dir where repo is

git init create repository
git init <respository name>
git remote add <short name> <url to remote repo> add itto local : to add
git clone <url to repo>  : get remote repo to a local repo you don't have
git clone /path/to/repository : clone local repo to another local

gitignore: don't commit sensitive data
	touch .gitignore
	code .gitignore
	add file.ext to ignore list

git add .   : to add files to staging area
git add hw.txt  : or add one file to staging
git status : shows changes/unchanged so far
git pull : getchanges from remote repo to local you alreadygit Pull have
git commit -m "important message about push" to local
git push --set-upstream origin main    : Final confirm : sends all commits 
git push --set-upstream origin Matthew : Final confirm : sends all commits to your branch
git push --set-upstream origin test    : Final confirm for branch test
git log : read out of commit

git branch : list all the branches present in the repo
git branch --help
git branch -d nameofbranch
git branch â€“d <branch-name> : delete
git checkout branchname : go to branch
git branch <new-branch-name>
git checkout -b <branch-name>
git remote -v : shows all remote repos
git remote add origin <host-or-remoteURL>  : To connect the local repository to a remote server
git remote rm <name-of-the-repository> : Will delete a connection to a specified remote repo

git merge <branch name>
git pull origin main

in git pull request, better way to merge to main


#Extra
remove head history but keep commit changes?
git reset HEAD~2

deletes last two commits from github
git reset --hard HEAD~2
git push --force

git reset HEAD~2